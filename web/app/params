./modules/wcm/controllers/IndexController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/wcm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/wcm/controllers/IndexController.php: * @version    $Id: IndexController.php 856 2010-05-07 16:05:39Z evorui $
./modules/wcm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/wcm/controllers/IndexController.php:        $this->loadLayout('layout-simple');
./modules/wcm/controllers/IndexController.php:        $this->render('index');
./modules/wcm/controllers/IndexController.php:        $feed = $_data->getFeed();
./modules/wcm/controllers/IndexController.php:        $this->loadLayout('layout-simple');
./modules/wcm/controllers/IndexController.php:        $this->render('index');
./modules/wcm/controllers/TypeAdminController.php:        $this->loadLayout('layout/simple');
./modules/wcm/controllers/TypeAdminController.php:        $this->view->items = $_e->getList(array(), array('updated DESC'), 512);
./modules/wcm/controllers/TypeAdminController.php:        $item = array('typeid' => $this->_params['typeid'],
./modules/wcm/controllers/TypeAdminController.php:            'title' => $this->_params['title'],
./modules/wcm/controllers/TypeAdminController.php:            'summary' => $this->_params['summary']);
./modules/wcm/controllers/TypeAdminController.php:            $_e->insert($item);
./modules/wcm/controllers/TypeAdminController.php:                'url' => '/wcm/type-admin/fields?typeid='.$item['typeid']),
./modules/wcm/controllers/TypeAdminController.php:                'url' => '/wcm/type-admin/')
./modules/wcm/controllers/TypeAdminController.php:        $this->view->message = Common_Message::get('success', 'Success', $links);
./modules/wcm/controllers/TypeAdminController.php:        $this->render('message-block', null, true);
./modules/wcm/controllers/TypeAdminController.php:        $where = array('entity_type' => $this->_params['typeid']);
./modules/wcm/controllers/TypeAdminController.php:        $this->view->items = $_fc->getList($where, array(), 128);
./modules/wcm/controllers/TypeAdminController.php:        $this->view->typeid = $this->_params['typeid'];
./modules/wcm/controllers/TypeAdminController.php:        $this->view->types = Common_Data_Field_Type::getTypes();
./modules/wcm/controllers/TypeAdminController.php:        $this->render('fields');
./modules/wcm/controllers/TypeAdminController.php:        $conn = Common_Db_Doctrine::getConnection(Common_Config::get('common')->database->master->dsn);
./modules/wcm/controllers/TypeAdminController.php:        $field_table = 'field_data_'.$this->_params['typeid'];
./modules/wcm/controllers/TypeAdminController.php:        $table_column  = 'field_'.$this->_params['field_name'];
./modules/wcm/controllers/TypeAdminController.php:        $conf = array('entity_type' => $this->_params['typeid'],
./modules/wcm/controllers/TypeAdminController.php:            'field_name' => $this->_params['field_name']);
./modules/wcm/controllers/TypeAdminController.php:        $count = $_fc->getCount($conf);
./modules/wcm/controllers/TypeAdminController.php:            $conf['field_type'] = $this->_params['field_type'];
./modules/wcm/controllers/TypeAdminController.php:            $conf['field_label'] = $this->_params['field_label'];
./modules/wcm/controllers/TypeAdminController.php:            $_fc->insert($conf);
./modules/wcm/controllers/TypeAdminController.php:            if (!$conn->import->tableExists($field_table)) {
./modules/wcm/controllers/TypeAdminController.php:                $sql = $conn->export->createTableSql($field_table, $cols); 
./modules/wcm/controllers/TypeAdminController.php:                $_fc->getAdapter()->query($sql[0]);
./modules/wcm/controllers/TypeAdminController.php:                $cols = $conn->import->listTableColumns($field_table);
./modules/wcm/controllers/TypeAdminController.php:                    $sql = $conn->export->alterTableSql($field_table, $alter);
./modules/wcm/controllers/TypeAdminController.php:                    $_fc->getAdapter()->query($sql);
./modules/wcm/controllers/TypeAdminController.php:        return $this->fieldsAction();
./modules/wcm/controllers/EntryController.php:        $id = '49fb2164-969a-08f4-d5f3-3ffa96a4d91a';
./modules/wcm/controllers/EntryController.php:        $entry = $_entry->getEntry($id);
./modules/wcm/controllers/EntryController.php://        $this->loadLayout('layout/simple');
./modules/wcm/controllers/EntryController.php://        $this->render('entry/view', null, true);
./modules/wcm/controllers/EntryController.php:        $this->render('layout/simple', null, true);
./modules/wcm/controllers/LayoutAdminController.php:        $this->loadLayout('layout/simple');
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->typeid = $this->_params['typeid'];
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->name = $this->_params['name'];
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->items = $_e->getList(array(), array('updated DESC'), 512);
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->typeid = $this->_params['typeid'];
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->name = $this->_params['name'];        
./modules/wcm/controllers/LayoutAdminController.php:        $source = file_get_contents($this->view->getScriptPath('layout/entry-index.phtml'));
./modules/wcm/controllers/LayoutAdminController.php:        $this->view->source = str_replace('<', '&lt;', $source);
./modules/wcm/controllers/LayoutAdminController.php:        $this->render('edit');
./modules/wcm/controllers/LayoutAdminController.php:        return $this->editAction();
./modules/wcm/controllers/ModelerController.php:        $this->loadLayout('layout/simple');
./modules/wcm/controllers/ModelerController.php:        $this->render($this->_params['vpath'], null, true);
./modules/wcm/Bootstrap.php: * @version    $Id: Bootstrap.php 850 2010-04-26 08:45:16Z evorui $
./modules/default/controllers/IndexController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/IndexController.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./modules/default/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/IndexController.php: * @version    $Id: IndexController.php 793 2010-01-21 16:02:11Z evorui $
./modules/default/controllers/IndexController.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./modules/default/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/ErrorController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/ErrorController.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./modules/default/controllers/ErrorController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/ErrorController.php: * @version    $Id: ErrorController.php 793 2010-01-21 16:02:11Z evorui $
./modules/default/controllers/ErrorController.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./modules/default/controllers/ErrorController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/default/controllers/ErrorController.php:        $errors = $this->_getParam('error_handler');
./modules/default/controllers/ErrorController.php:        switch ($errors->type) {
./modules/default/controllers/ErrorController.php:                // 404 error -- controller or action not found
./modules/default/controllers/ErrorController.php:                $this->getResponse()->setHttpResponseCode(404);
./modules/default/controllers/ErrorController.php:                $this->view->message = 'Page not found';
./modules/default/controllers/ErrorController.php:                $this->getResponse()->setHttpResponseCode(500);
./modules/default/controllers/ErrorController.php:                $this->view->message = 'Application error';
./modules/default/controllers/ErrorController.php:        $this->view->exception = $errors->exception;
./modules/default/controllers/ErrorController.php:        $this->view->request   = $errors->request;
./modules/user/controllers/SignController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/SignController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/SignController.php: * @version    $Id: SignController.php 832 2010-03-21 15:51:48Z onerui $
./modules/user/controllers/SignController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/SignController.php:        if (isset($this->_params['uname'])) {
./modules/user/controllers/SignController.php:            $this->view->uname = $this->_params['uname'];
./modules/user/controllers/SignController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/SignController.php:        $this->render('index');
./modules/user/controllers/SignController.php:        $params = $this->_getAllParams();
./modules/user/controllers/SignController.php:        if (!$_validator->isValid($params, $msg)) {
./modules/user/controllers/SignController.php:            $this->view->message = Common_Message::get('error', $msg);
./modules/user/controllers/SignController.php:            return $this->indexAction();
./modules/user/controllers/SignController.php:            $_sign->in($params);
./modules/user/controllers/SignController.php:            $this->view->message = Common_Message::get('error', $e->getMessage());
./modules/user/controllers/SignController.php:            //return $this->indexAction();
./modules/user/controllers/SignController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/SignController.php:        $this->render('index');
./modules/user/controllers/SignController.php:        //$this->_redirect('/');
./modules/user/controllers/SignController.php:            $_sign->out();
./modules/user/controllers/SignController.php:        $this->_redirect('/');
./modules/user/controllers/SignController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/SignController.php:        foreach ($this->_params as $key => $value) {
./modules/user/controllers/SignController.php:            $this->view->$key = $value;
./modules/user/controllers/SignController.php:        if (!$_validator->isValid($this->_params, $msg)) {
./modules/user/controllers/SignController.php:            $this->view->message = Common_Message::get('error', $msg);
./modules/user/controllers/SignController.php:            return $this->indexAction();
./modules/user/controllers/SignController.php:             $_sign->up($this->_params);
./modules/user/controllers/SignController.php:            $links = array(array('url' => $this->view->baseModulePath.'/sign',
./modules/user/controllers/SignController.php:            $this->view->message = Common_Message::get('success', 'Success', $links);
./modules/user/controllers/SignController.php:            $this->render('message', null, true);
./modules/user/controllers/SignController.php:            $this->view->message = Common_Message::get('error', $e->getMessage());
./modules/user/controllers/SignController.php:            return $this->indexAction();
./modules/user/controllers/AccountManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/AccountManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/AccountManageController.php: * @version    $Id: AccountManageController.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/controllers/AccountManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/AccountManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/AccountManageController.php:        $params = $this->_params;
./modules/user/controllers/AccountManageController.php:                if ($this->_session->uid != "0") {
./modules/user/controllers/AccountManageController.php:                    $user = $_user->getById($this->_session->uid);
./modules/user/controllers/AccountManageController.php:                        $where = array('uid = ?' => $this->_session->uid);
./modules/user/controllers/AccountManageController.php:                        $_user->update($set, $where);
./modules/user/controllers/AccountManageController.php:                        $this->view->message = Common_Message::get('success', 'Success');
./modules/user/controllers/AccountManageController.php:                        $this->view->message = Common_Message::get('error',
./modules/user/controllers/AccountManageController.php:                $this->view->message = Common_Message::get('error',
./modules/user/controllers/AccountManageController.php:            $this->view->message = Common_Message::get('error', $msg);
./modules/user/controllers/AccountManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/AccountManageController.php:        $this->render('pwd');
./modules/user/controllers/AccountManageController.php:            if ($this->_session->uid != "0") {
./modules/user/controllers/AccountManageController.php:                $pf = $_user->getById($this->_session->uid);
./modules/user/controllers/AccountManageController.php:        $this->view->profile = $pf;
./modules/user/controllers/AccountManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/AccountManageController.php:        $this->render('email');
./modules/user/controllers/AccountManageController.php:        $params = $this->_params;
./modules/user/controllers/AccountManageController.php:                if ($this->_session->uid != "0") {
./modules/user/controllers/AccountManageController.php:                    //$user = $_user->getById($this->_session->uid);
./modules/user/controllers/AccountManageController.php:                    $where = array('uid = ?' => $this->_session->uid);
./modules/user/controllers/AccountManageController.php:                    $_user->update($set, $where);
./modules/user/controllers/AccountManageController.php:                    $this->view->message = Common_Message::get('success', 'Success');
./modules/user/controllers/AccountManageController.php:                $this->view->message = Common_Message::get('error', 'Unknown');
./modules/user/controllers/AccountManageController.php:            $this->view->message = Common_Message::get('error', $msg);
./modules/user/controllers/AccountManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/AccountManageController.php:        $this->render('email');
./modules/user/controllers/ProfileController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileController.php: * @version    $Id: ProfileController.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/controllers/ProfileController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileController.php:        if (!isset($this->_params['user'])) {
./modules/user/controllers/ProfileController.php:            $user = $_user->getList(array('uname' => $this->_params['user']));
./modules/user/controllers/ProfileController.php:                $pf = $_profile->getById($user[0]['uid']);
./modules/user/controllers/ProfileController.php:                $this->view->user = $user[0];
./modules/user/controllers/ProfileController.php:        $this->view->profile = $pf;
./modules/user/controllers/ProfileController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ProfileController.php:        $this->_helper->viewRenderer->setNoRender(true);
./modules/user/controllers/ProfileController.php:        $uri = $this->getRequest()->getRequestUri();
./modules/user/controllers/ProfileController.php:            $de = str_split($this->_params['user']);            
./modules/user/controllers/ProfileController.php:            $file.= '/'.$this->_params['user'].'/'.$v[2].'.png';
./modules/user/controllers/ProfileController.php:        header("Cache-Control: private");
./modules/user/controllers/ProfileController.php:        header("Content-type: image/png");
./modules/user/controllers/ProfileController.php:        if ($validator->isValid($file, array('type' => 'image/png'))) {
./modules/user/controllers/ProfileController.php:            header("Content-Disposition: inline; filename=photo");
./modules/user/controllers/ProfileController.php:            header('Content-Disposition: attachment; filename=photo');
./modules/user/controllers/ProfileController.php:        header("Content-Length: ".filesize($file));    
./modules/user/controllers/ProfileManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileManageController.php: * @version    $Id: ProfileManageController.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/controllers/ProfileManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ProfileManageController.php:            if ($this->_session->uid != "0") {
./modules/user/controllers/ProfileManageController.php:                $pf = $_db->getById($this->_session->uid);
./modules/user/controllers/ProfileManageController.php:        $this->view->profile = $pf;
./modules/user/controllers/ProfileManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ProfileManageController.php:        $params = $this->_params;
./modules/user/controllers/ProfileManageController.php:		        $where = array('uid = ?' => $this->_session->uid);
./modules/user/controllers/ProfileManageController.php:                $_pf->update($params, $where);
./modules/user/controllers/ProfileManageController.php:                $msg = Common_Message::get('error', 'ERROR'.$e->getMessage());
./modules/user/controllers/ProfileManageController.php:        $this->view->profile = $params;
./modules/user/controllers/ProfileManageController.php:            $this->view->message = $msg;
./modules/user/controllers/ProfileManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ProfileManageController.php:        $this->render('index');
./modules/user/controllers/ProfileManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ProfileManageController.php:        $params = $this->_params;
./modules/user/controllers/ProfileManageController.php:            if ($this->_session->uid != "0") {
./modules/user/controllers/ProfileManageController.php:                $profile = $_user->getById($this->_session->uid);
./modules/user/controllers/ProfileManageController.php:                $_image->resampimagejpg(100, 100, $file_tmp, $des_dir.'/w100.png', true);
./modules/user/controllers/ProfileManageController.php:                $_image->resampimagejpg(40, 40, $file_tmp, $des_dir.'/w40.png', false);            
./modules/user/controllers/ProfileManageController.php:            $this->view->message = $msg;
./modules/user/controllers/ProfileManageController.php:            $this->view->message = Common_Message::get('success', 'Success');
./modules/user/controllers/ProfileManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ProfileManageController.php:        $this->render('photo');
./modules/user/controllers/ProfileManageController.php:        //$this->_redirect('/user/manage');
./modules/user/controllers/ManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ManageController.php: * @version    $Id: ManageController.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/controllers/ManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/controllers/ManageController.php:            if ($this->_session->uid != "0") {
./modules/user/controllers/ManageController.php:                $user = $_user->getById($this->_session->uid);
./modules/user/controllers/ManageController.php:        $this->view->item = $user;
./modules/user/controllers/ManageController.php:        $this->loadLayout('layout-simple');
./modules/user/controllers/ManageController.php:        $this->render('index');
./modules/user/Version.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/Version.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/Version.php: * @version    $Id: Version.php 799 2010-01-24 15:33:43Z evorui $
./modules/user/Version.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/Version.php:     * Version identification - see compareVersion()
./modules/user/Version.php:    const DATE = '$LastChangedDate: 2009-08-16 01:38:07 +0800 (Sun, 16 Aug 2009) $';
./modules/user/Version.php:     * @return boolean           -1 if the $version is older,
./modules/user/models/Profile.php:            if (!in_array($key, $this->_cols)) {
./modules/user/models/Profile.php:            $_user->update($params, $where);
./modules/user/models/Account/EmailValidate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Account/EmailValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Account/EmailValidate.php: * @version    $Id: UpValidate.php 800 2010-01-25 14:46:15Z evorui $
./modules/user/models/Account/EmailValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Account/EmailValidate.php:     * Parameters check for user-sign-in action 
./modules/user/models/Db/UserProfile.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Db/UserProfile.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Db/UserProfile.php: * @version    $Id: UserProfile.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/models/Db/UserProfile.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Db/User.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Db/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/models/Db/User.php: * @version    $Id: User.php 834 2010-03-22 16:26:33Z onerui $
./modules/user/models/Db/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/user/Bootstrap.php: * @version    $Id: Bootstrap.php 811 2010-02-28 12:08:39Z onerui $
./modules/cm/controllers/IndexController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/controllers/IndexController.php: * @version    $Id: IndexController.php 856 2010-05-07 16:05:39Z evorui $
./modules/cm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/controllers/IndexController.php:        $this->_helper->viewRenderer->setNoRender();
./modules/cm/controllers/IndexController.php:        $type = $this->_request->getParam('type');
./modules/cm/controllers/IndexController.php:        $cfg = Common_Config::get("cm/$type.ini")->index->index;
./modules/cm/controllers/IndexController.php:        if (isset($cfg->session)) {
./modules/cm/controllers/IndexController.php:            $this->view->session = Common_Session::getInstance();
./modules/cm/controllers/IndexController.php:        foreach ($cfg->datax as $k => $v) {
./modules/cm/controllers/IndexController.php:            $items = Cm_Model_Datax::getFeed($v->query);
./modules/cm/controllers/IndexController.php:            $block = APPLICATION_PATH.'/modules/cm/views/blocks/'.$v->block;
./modules/cm/controllers/IndexController.php:            $this->view->{'datax_'.$k} = $out;
./modules/cm/controllers/IndexController.php:        $this->render('layout/simple', null, true);
./modules/cm/controllers/ItemController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/controllers/ItemController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/controllers/ItemController.php: * @version    $Id: ItemController.php 856 2010-05-07 16:05:39Z evorui $
./modules/cm/controllers/ItemController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/cm/models/Datax.php:        if (isset($query->limit)) {
./modules/cm/models/Datax.php:            $limit = $query->limit;
./modules/cm/models/Datax.php:        if (isset($query->order)) {
./modules/cm/models/Datax.php:            $order = explode(",", $query->order);
./modules/cm/models/Datax.php:        $_datax = new Common_Data($query->type);
./modules/cm/models/Datax.php:        $items  = $_datax->getFeed($where, $order, $limit);
./modules/cm/Bootstrap.php: * @version    $Id: Bootstrap.php 850 2010-04-26 08:45:16Z evorui $
./modules/useradm/controllers/PermController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/useradm/controllers/PermController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/useradm/controllers/PermController.php: * @version    $Id: PermController.php 797 2010-01-23 16:28:35Z evorui $
./modules/useradm/controllers/PermController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/useradm/controllers/RoleController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./modules/useradm/controllers/RoleController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./modules/useradm/controllers/RoleController.php: * @version    $Id: RoleController.php 797 2010-01-23 16:28:35Z evorui $
./modules/useradm/controllers/RoleController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/SignController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/SignController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/SignController.php: * @version    $Id: SignController.php 832 2010-03-21 15:51:48Z onerui $
./user/controllers/SignController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/SignController.php:        $this->view->uname = isset($this->reqs->uname) ? $this->reqs->uname : "";
./user/controllers/SignController.php:        $this->response('sign/index');
./user/controllers/SignController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/SignController.php:            $this->view->message = Core_Message::get('error', $msg);
./user/controllers/SignController.php:            return $this->indexAction();
./user/controllers/SignController.php:            $this->initdb();
./user/controllers/SignController.php:            $_sign->in($vars);
./user/controllers/SignController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./user/controllers/SignController.php:            return $this->indexAction();
./user/controllers/SignController.php:            $this->initdb();
./user/controllers/SignController.php:            $_sign->out();
./user/controllers/SignController.php:        if (isset($this->reqs->continue)) {
./user/controllers/SignController.php:            header("Location: {$this->reqs->continue}");
./user/controllers/SignController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/SignController.php:            $this->view->$key = $value;
./user/controllers/SignController.php:        $this->response('sign/up');
./user/controllers/SignController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/SignController.php:            $this->view->message = Core_Message::get('error', $msg);
./user/controllers/SignController.php:            return $this->upAction();
./user/controllers/SignController.php:            $this->initdb();
./user/controllers/SignController.php:            $_sign->up($vars);
./user/controllers/SignController.php:            $this->view->message = Core_Message::get('success', 'Success');
./user/controllers/SignController.php:            $this->indexAction();
./user/controllers/SignController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./user/controllers/SignController.php:            $this->upAction();
./user/controllers/AccountManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/AccountManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/AccountManageController.php: * @version    $Id: AccountController.php 834 2010-03-22 16:26:33Z onerui $
./user/controllers/AccountManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/AccountManageController.php:        $this->initdb();
./user/controllers/AccountManageController.php:        $this->session = Core_Session::getInstance();
./user/controllers/AccountManageController.php:        $this->view->content = $this->view->render('account-manage/pwd');
./user/controllers/AccountManageController.php:        $this->response('layout');
./user/controllers/AccountManageController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/AccountManageController.php:                if ($this->session->uid != "0") {
./user/controllers/AccountManageController.php:                    $user = $_user->getById($this->session->uid);
./user/controllers/AccountManageController.php:                        $where = array('id' => $this->session->uid);
./user/controllers/AccountManageController.php:                        $_user->update($set, $where);
./user/controllers/AccountManageController.php:                        $this->view->message = Core_Message::get('success', 'Success');
./user/controllers/AccountManageController.php:                        $this->view->message = Core_Message::get('error',
./user/controllers/AccountManageController.php:                $this->view->message = Core_Message::get('error',
./user/controllers/AccountManageController.php:            $this->view->message = Core_Message::get('error', $msg);
./user/controllers/AccountManageController.php:        $this->pwdAction();
./user/controllers/AccountManageController.php:            if ($this->session->uid != "0") {
./user/controllers/AccountManageController.php:                $user = $_user->getById($this->session->uid);
./user/controllers/AccountManageController.php:            $this->view->message = Core_Message::get('error', 'Access Denied');
./user/controllers/AccountManageController.php:            $this->view->content = $this->view->render('account-manage/email', 
./user/controllers/AccountManageController.php:        $this->response('layout');
./user/controllers/AccountManageController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/AccountManageController.php:            $this->view->message = Core_Message::get('error', $msg);
./user/controllers/AccountManageController.php:            return $this->emailAction();
./user/controllers/AccountManageController.php:            if ($this->session->uid != "0") {
./user/controllers/AccountManageController.php:                $user = $_user->getById($this->session->uid);
./user/controllers/AccountManageController.php:                    $where = array('id' => $this->session->uid);
./user/controllers/AccountManageController.php:                    $_user->update($set, $where);
./user/controllers/AccountManageController.php:                    $this->view->message = Core_Message::get('success', 'Success');
./user/controllers/AccountManageController.php:                    $this->view->message = Core_Message::get('error',
./user/controllers/AccountManageController.php:            $this->view->message = Core_Message::get('error', 'Unknown');
./user/controllers/AccountManageController.php:        $this->emailAction();
./user/controllers/ProfileController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileController.php: * @version    $Id: ProfileController.php 834 2010-03-22 16:26:33Z onerui $
./user/controllers/ProfileController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileController.php:        if (preg_match('#^(.+)/profile/(.+)$#i', $this->reqs->uri, $regs)) {
./user/controllers/ProfileController.php:                $this->initdb();
./user/controllers/ProfileController.php:                $user = $_profile->getList(array('uname' => $uname));
./user/controllers/ProfileController.php:            $this->view->message = Core_Message::get('error', 'Profile not found');
./user/controllers/ProfileController.php:            $this->view->profile = $pf;
./user/controllers/ProfileController.php:            $this->view->content = $this->view->render('profile/index');
./user/controllers/ProfileController.php:            unset($pf, $this->view->profile);
./user/controllers/ProfileController.php:        $this->response('layout');
./user/controllers/ProfileController.php:        if (preg_match('#^(.+)/profile/avatar/(.+)-(.+).png$#i', $this->reqs->uri, $regs)) {   
./user/controllers/ProfileController.php:            'media_name'=> $uname.'-'.$wsize.'.png',
./user/controllers/ProfileController.php:        $this->_output($media);       
./user/controllers/ProfileController.php:        //header("Cache-Control: private");
./user/controllers/ProfileController.php:        //header("Last-Modified: " . gmdate("D, d M Y H:i:s",strtotime($media['modified'])) . " GMT");
./user/controllers/ProfileController.php:        header("Content-type: ".$ims['mime']);
./user/controllers/ProfileController.php:        if ($validator->isValid($media['imagePath'], array('type' => $ims['mime']))) {
./user/controllers/ProfileController.php:            header("Content-Disposition: inline; filename=".$media['media_name']);
./user/controllers/ProfileController.php:            header('Content-Disposition: attachment; filename='.$media['media_name']);
./user/controllers/ProfileController.php:        header("Content-Disposition: inline; filename=".$media['media_name']);
./user/controllers/ProfileController.php:        header("Content-Length: ".filesize($media['imagePath']));    
./user/controllers/ProfileManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileManageController.php: * @version    $Id: ManageProfileController.php 834 2010-03-22 16:26:33Z onerui $
./user/controllers/ProfileManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ProfileManageController.php:        $this->initdb();
./user/controllers/ProfileManageController.php:        $this->session = Core_Session::getInstance();
./user/controllers/ProfileManageController.php:            if ($this->session->uid != "0") {
./user/controllers/ProfileManageController.php:                $item = $_db->getById($this->session->uid);
./user/controllers/ProfileManageController.php:            $entry->$key = $val;
./user/controllers/ProfileManageController.php:        $this->view->content = $this->view->render('profile-manage/index', array('entry' => $entry));
./user/controllers/ProfileManageController.php:        $this->response('layout');
./user/controllers/ProfileManageController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/ProfileManageController.php:		        $item = $_pf->getById($this->session->uid);
./user/controllers/ProfileManageController.php:                    $where = array('id' => $this->session->uid);
./user/controllers/ProfileManageController.php:                    $_pf->update($vars, $where);
./user/controllers/ProfileManageController.php:                    $vars['id'] = $this->session->uid;
./user/controllers/ProfileManageController.php:                    $vars['uname'] = $this->session->uname;
./user/controllers/ProfileManageController.php:                    $_pf->insert($vars);
./user/controllers/ProfileManageController.php:                $msg = Core_Message::get('error', 'ERROR'.$e->getMessage());
./user/controllers/ProfileManageController.php:        $this->view->profile = $vars;
./user/controllers/ProfileManageController.php:            $this->view->message = $msg;
./user/controllers/ProfileManageController.php:            $entry->$key = $val;
./user/controllers/ProfileManageController.php:        $this->view->content = $this->view->render('profile-manage/index', array('entry' => $entry));
./user/controllers/ProfileManageController.php:        $this->response('layout');
./user/controllers/ProfileManageController.php:        $uname = $this->session->uname;
./user/controllers/ProfileManageController.php:        $this->view->entry_path = $path;
./user/controllers/ProfileManageController.php:        $this->view->content = $this->view->render('profile-manage/photo');
./user/controllers/ProfileManageController.php:        $this->response('layout');
./user/controllers/ProfileManageController.php:        $vars = get_object_vars($this->reqs);
./user/controllers/ProfileManageController.php:            if ($this->session->uid != "0") {
./user/controllers/ProfileManageController.php:                $profile = $_user->getById($this->session->uid);
./user/controllers/ProfileManageController.php:                $_image->resampimagejpg(100, 100, $file_tmp, $des_dir.'/w100.png', true);
./user/controllers/ProfileManageController.php:                $_image->resampimagejpg(40, 40, $file_tmp, $des_dir.'/w40.png', false);            
./user/controllers/ProfileManageController.php:            $this->view->message = $msg;
./user/controllers/ProfileManageController.php:            $this->view->message = Core_Message::get('success', 'Success');
./user/controllers/ProfileManageController.php:        $this->photoAction();
./user/controllers/ManageController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ManageController.php: * @version    $Id: ManageController.php 834 2010-03-22 16:26:33Z onerui $
./user/controllers/ManageController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/controllers/ManageController.php:        $this->initdb();
./user/controllers/ManageController.php:        $this->session = Core_Session::getInstance();
./user/controllers/ManageController.php:        $this->view->session = $this->session;
./user/controllers/ManageController.php:            if ($this->session->uid != "0") {
./user/controllers/ManageController.php:                $this->view->user = $_user->getById($this->session->uid);
./user/controllers/ManageController.php:                $des = str_split($this->session->uname);            
./user/controllers/ManageController.php:                $path = '/data/user/'.$des['0'].'/'.$des['1'].'/'.$des['2'].'/'.$this->session->uname;
./user/controllers/ManageController.php:                $this->view->user['photo_path'] = $path;
./user/controllers/ManageController.php:                $this->view->content = $this->view->render('manage/index');
./user/controllers/ManageController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./user/controllers/ManageController.php:        unset($this->session);
./user/controllers/ManageController.php:        $this->response('layout');
./user/views/message-general.php:if (isset($this->message)) 
./user/views/message-general.php:    switch ($this->message['type']) {
./user/views/message-general.php:    background-color: <?php echo $msg_bg; ?>; 
./user/views/message-general.php:.msgitembody {font-weight: bold;}
./user/views/message-general.php:      	    <img src="<?=$this->viewDefaultPath?>/img/<?=$this->message['type']?>-small.png" border="0" />
./user/views/message-general.php:      	    <?=$this->message['body']?>
./user/views/layout.php:<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
./user/views/layout.php:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
./user/views/layout.php:    <title><?php echo $this->headtitle; ?></title>
./user/views/layout.php:    <?php echo $this->headlink; ?>
./user/views/layout.php:print $this->render('message-general');
./user/views/layout.php:print $this->content;
./user/views/manage/index.php:$this->headtitle = "Account Settings";
./user/views/manage/index.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/manage.css\" type=\"text/css\" media=\"all\" />";
./user/views/manage/index.php:    <img src="<?php echo $this->user['photo_path']?>/w100.png" />
./user/views/manage/index.php:      <li><b><?php echo $this->session->uname?></b></li>
./user/views/manage/index.php:      <li><a href="/user/profile-manage/">Edit profile</a>  - <a class="light" href="/user/profile/<?php echo $this->session->uname?>" target="_blank">Preview</a></li>
./user/views/manage/index.php:      <li><a href="/user/profile-manage/photo">Change photo</a></li>
./user/views/manage/index.php:          <li><a href="/user/account-manage/pwd">Change password</a></li>
./user/views/manage/index.php:          <li><?php echo $this->user['email']?></li> 
./user/views/manage/index.php:          <li><a href="/user/account-manage/email">Edit</a></li> 
./user/views/manage/index.php:        <a href="#">Blog</a> -
./user/views/manage/index.php:        <a href="#">Google Photo</a> -
./user/views/manage/index.php:        <a href="#">Bookmark</a> -
./user/views/manage/index.php:        <a href="#">Wiki</a> -
./user/views/manage/index.php:        <a href="#">Page</a> -
./user/views/manage/index.php:        <a href="#">BBS</a> -
./user/views/manage/index.php:        <a href="#">Reader</a> -
./user/views/manage/index.php:        <a href="#">Google Calendar</a> -
./user/views/manage/index.php:        <a href="#">Google Doc</a> -
./user/views/manage/index.php:        <a href="#">KB</a> -
./user/views/manage/index.php:        <a href="#">Issue Tracker</a> -
./user/views/account-manage/email.php:$this->headtitle = "Change password";
./user/views/account-manage/email.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/manage.css\" type=\"text/css\" media=\"all\" />";
./user/views/account-manage/email.php:<form id="account_email" name="account_email" action="/user/account-manage/emaildo" method="post" >
./user/views/account-manage/pwd.php:$this->headtitle = "Change password";
./user/views/account-manage/pwd.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/manage.css\" type=\"text/css\" media=\"all\" />";
./user/views/account-manage/pwd.php:<form name="user_accountpwd" action="/user/account-manage/pwddo" method="post" >
./user/views/profile-manage/photo.php:$this->headtitle = "Change photo";
./user/views/profile-manage/photo.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/manage.css\" type=\"text/css\" media=\"all\" />";
./user/views/profile-manage/photo.php:		<td valign="bottom"><img src="<?php echo $this->entry_path?>/w100.png" /> <b>Normal size</b></td> 
./user/views/profile-manage/photo.php:		<td valign="bottom"><img src="<?php echo $this->entry_path?>/w40.png" /> <b>Small size</b></td> 
./user/views/profile-manage/photo.php:<form id="changephoto" name="changephoto" enctype="multipart/form-data" action="/user/profile-manage/photodo" method="post">
./user/views/profile-manage/index.php:$this->headtitle = "My Profile";
./user/views/profile-manage/index.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/manage.css\" type=\"text/css\" media=\"all\" />";
./user/views/profile-manage/index.php:<div id="profile-manage">
./user/views/profile-manage/index.php:<!-- TinyMCE/ -->
./user/views/profile-manage/index.php:<!-- /TinyMCE -->
./user/views/profile-manage/index.php:<form id="user_profile" name="user_profile" action="/user/profile-manage/do" method="post" >
./user/views/profile-manage/index.php:  <input id="uid" name="uid" type="hidden" value="<?php echo $entry->uid?>" />
./user/views/profile-manage/index.php:      <td><input id="name" name="name" type="text" size="16" value="<?php echo $entry->name?>" /></td>
./user/views/profile-manage/index.php:      	Male <input id="gender" name="gender" type="radio" value="1" <?php if ($entry->gender == 1) { echo 'checked="checked"'; } ?> />
./user/views/profile-manage/index.php:          Female <input name="gender" type="radio" value="0" <?php if ($entry->gender == 0) { echo 'checked="checked"'; } ?> />   
./user/views/profile-manage/index.php:      <td ><input id="birthday" name="birthday" type="text" size="16" value="<?php echo $entry->birthday?>" /> Example : 1970-01-01</td>
./user/views/profile-manage/index.php:      <td ><input id="address" name="address" type="text" size="30" value="<?php echo $entry->address?>" /></td>
./user/views/profile-manage/index.php:        <textarea id="content" name="content" style="width:100%" rows="20" ><?php echo $entry->content?></textarea>
./user/views/sign/up.php:    <?php echo $this->render('message-general');?>
./user/views/sign/up.php:                <input id="uname" name="uname" type="text" size="16" value="<?=$this->uname?>" />
./user/views/sign/up.php:            <td><input id="email" name="email" type="text" size="20" maxlength="50" value="<?=$this->email?>" /></td>
./user/views/sign/up.php:                <input id="pass" name="pass" type="password" size="16" value="<?=$this->pass?>" />
./user/views/sign/up.php:            <td align="right"><b>Re-type Password</b></td>
./user/views/sign/up.php:            <td><input id="repass" name="repass" type="password" size="16" value="<?=$this->repass?>" /></td>
./user/views/sign/index.php:    <?php echo $this->render('message-general');?>
./user/views/sign/index.php:                <input id="uname" name="uname" type="text" value="<?=$this->uname?>" />
./user/views/profile/index.php:$this->headtitle = "Profile";
./user/views/profile/index.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_user/css/common.css\" type=\"text/css\" media=\"all\" />";
./user/views/profile/index.php:    <h2 class="title"><?php echo $this->profile['name']?></h2>
./user/views/profile/index.php:            <td width="160px" valign="top"><img src="<?php echo $this->profile['photo_path']?>/w100.png" /></td>
./user/views/profile/index.php:            <td align="left" class="info"><?php echo $this->profile['content']?></td>
./user/models/Profile.php:            if (!in_array($key, $this->_cols)) {
./user/models/Profile.php:            $_user->update($params, $where);
./user/models/Account/EmailValidate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Account/EmailValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Account/EmailValidate.php: * @version    $Id: UpValidate.php 800 2010-01-25 14:46:15Z evorui $
./user/models/Account/EmailValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Account/EmailValidate.php:     * Parameters check for user-sign-in action 
./user/models/Sign.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign.php: * @version    $Id: Sign.php 834 2010-03-22 16:26:33Z onerui $
./user/models/Sign.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign.php:            $rs = $_user->getList($where, array(), 1);
./user/models/Sign.php:            $_session->insert($data);
./user/models/Sign.php:                $_session->delete(array('id' => $sid));
./user/models/Sign.php:        setcookie("sid", '', time() - 3600, '/');
./user/models/Sign.php:        setcookie("uid", '', time() - 3600, '/');
./user/models/Sign.php:            $rs = $_user->getList($where, array(), 1);
./user/models/Sign.php:            $_user->insert($user);
./user/models/Sign/UpValidate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/UpValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/UpValidate.php: * @version    $Id: UpValidate.php 834 2010-03-22 16:26:33Z onerui $
./user/models/Sign/UpValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/UpValidate.php:     * Parameters check for user-sign-in action 
./user/models/Sign/UpValidate.php:		if (!preg_match('/^[a-z]{1,1}$/', substr($params['uname'], 0, 1))) {
./user/models/Sign/UpValidate.php:		if (!preg_match('/^[a-z0-9]{1,16}$/', $params['uname'])) {
./user/models/Sign/UpValidate.php:		    $msg = 'Only letters (a-z), numbers (0-9) are allowed';
./user/models/Sign/Validate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/Validate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/Validate.php: * @version    $Id: Validate.php 834 2010-03-22 16:26:33Z onerui $
./user/models/Sign/Validate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./user/models/Sign/Validate.php:     * Parameters check for user-sign-in action 
./user/models/Sign/Validate.php:		if (!preg_match('/^[a-z]{1,1}[a-z0-9]{2,15}$/', $params['uname'])) {
./Common/Message.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Message.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Message.php: * @version    $Id: Message.php 799 2010-01-24 15:33:43Z evorui $
./Common/Message.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db.php: * @version    $Id: Db.php 838 2010-03-28 05:30:40Z onerui $
./Common/Db.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Data/Entry.php:	        $entry = $_entry->getById($id);
./Common/Data/Entry.php:            $fields = $_field->getFields($id, $entry['type']);
./Common/Data/Entry/Type.php:        $this->setOptions(Common_Data_Db::$entry_type);
./Common/Data/Field.php:        $insts = $_conf->getList(array('entity_type' => $type));
./Common/Data/Field.php:                $ret = $_data->getById($entityid);
./Common/Data/Field.php:                        $ret = $_data->getList(array('in.tid' => $terms), array(), 100);
./Common/Data/Field/Config.php:        $this->setOptions(Common_Data_Db::$field_config);
./Common/User/Sign.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign.php: * @version    $Id: Sign.php 834 2010-03-22 16:26:33Z onerui $
./Common/User/Sign.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign.php:            $user = $_user->getByName($params['uname']);
./Common/User/Sign.php:            $_session->insert($data);
./Common/User/Sign.php:                $_session->delete($sid);
./Common/User/Sign.php:        setcookie("sid", '', time() - 3600, '/');
./Common/User/Sign.php:        setcookie("uid", '', time() - 3600, '/');
./Common/User/Sign.php:            $user = $_user->getByName($params['uname']);
./Common/User/Sign.php:            $_user->insert($user);
./Common/User/Sign/UpValidate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/UpValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/UpValidate.php: * @version    $Id: UpValidate.php 834 2010-03-22 16:26:33Z onerui $
./Common/User/Sign/UpValidate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/UpValidate.php:     * Parameters check for user-sign-in action 
./Common/User/Sign/UpValidate.php:		if (!ereg('^[a-z]{1,1}[a-z0-9]{2,15}$', $params['uname'])) {
./Common/User/Sign/Validate.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/Validate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/Validate.php: * @version    $Id: Validate.php 834 2010-03-22 16:26:33Z onerui $
./Common/User/Sign/Validate.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/User/Sign/Validate.php:     * Parameters check for user-sign-in action 
./Common/User/Sign/Validate.php:		if (!ereg('^[a-z]{1,1}[a-z0-9]{2,15}$', $params['uname'])) {
./Common/Session/Instance.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Session/Instance.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Session/Instance.php: * @version    $Id: Instance.php 834 2010-03-22 16:26:33Z onerui $
./Common/Session/Instance.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Session/Instance.php:                $rs = $_session->getById($sid);
./Common/Session/Instance.php:                $this->sid   = $rs['sid'];
./Common/Session/Instance.php:                $this->uid   = $rs['uid'];
./Common/Session/Instance.php:                $this->uname = $rs['uname'];
./Common/Session/Instance.php:                //$this->roles    = $rs->roles;
./Common/Version.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Version.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Version.php: * @version    $Id: Version.php 796 2010-01-22 16:58:48Z onerui $
./Common/Version.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Version.php:     * Version identification - see compareVersion()
./Common/Version.php:    const DATE = '$LastChangedDate: 2009-08-16 01:38:07 +0800 (Sun, 16 Aug 2009) $';
./Common/Version.php:     * @return boolean           -1 if the $version is older,
./Common/Session.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Session.php: * @version    $Id: Session.php 799 2010-01-24 15:33:43Z evorui $
./Common/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Data.php:        $this->_type = "itemx_$type";
./Common/Data.php:			$_entry = Common_Db::getInstance(array('name' => $this->_type, 'primary' => 'gid'));
./Common/Data.php:	        $feed = $_entry->getList($where, $order, $limit, $offset);
./Common/Data.php:	        $entry = $_entry->getById($entryid);
./Common/Data.php:            $fields = $_field->getFields($entry);
./Common/Db/Table/Session.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Session.php: * @version    $Id: Session.php 832 2010-03-21 15:51:48Z onerui $
./Common/Db/Table/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Abstract.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Abstract.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Abstract.php: * @version    $Id: Abstract.php 834 2010-03-22 16:26:33Z onerui $
./Common/Db/Table/Abstract.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/Abstract.php:        $cols = $this->_getCols();
./Common/Db/Table/Abstract.php:            $data['created'] = date('Y-m-d H:i:s');
./Common/Db/Table/Abstract.php:            $data['updated'] = date('Y-m-d H:i:s');
./Common/Db/Table/Abstract.php:        $cols = $this->_getCols();
./Common/Db/Table/Abstract.php:        if (isset($data[$this->_primary])) {
./Common/Db/Table/Abstract.php:            $data['updated'] = date('Y-m-d H:i:s');
./Common/Db/Table/Abstract.php:        $db = $this->getAdapter();
./Common/Db/Table/Abstract.php:        $select = $db->select();
./Common/Db/Table/Abstract.php:        $select->from($this->_name, '*');
./Common/Db/Table/Abstract.php:        $select->where($this->_primary.'= ?', $id);
./Common/Db/Table/Abstract.php:            $rs = $db->fetchRow($select);
./Common/Db/Table/Abstract.php:        $db = $this->getAdapter();
./Common/Db/Table/Abstract.php:        $select = $db->select();
./Common/Db/Table/Abstract.php:        $cols = $this->_getCols();
./Common/Db/Table/Abstract.php:        $select->from($this->_name, '*');
./Common/Db/Table/Abstract.php:        $select->order($order);
./Common/Db/Table/Abstract.php:        $select->limit($limit, $offset);
./Common/Db/Table/Abstract.php:            $rs = $db->fetchAll($select);
./Common/Db/Table/Abstract.php:        $db = $this->getAdapter();
./Common/Db/Table/Abstract.php:        $select = $db->select();
./Common/Db/Table/Abstract.php:        $cols = $this->_getCols();
./Common/Db/Table/Abstract.php:        $select->from($this->_name, 'count(*) as count');
./Common/Db/Table/Abstract.php:        $select->order($order);
./Common/Db/Table/Abstract.php:        $select->limit($limit, $offset);
./Common/Db/Table/Abstract.php:            $rs = $db->fetchRow($select);
./Common/Db/Table/User.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table/User.php: * @version    $Id: User.php 832 2010-03-21 15:51:48Z onerui $
./Common/Db/Table/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Session.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Session.php: * @version    $Id: Session.php 811 2010-02-28 12:08:39Z onerui $
./Common/Db/Session.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Util.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Util.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Util.php: * @version    $Id: Util.php 799 2010-01-24 15:33:43Z evorui $
./Common/Db/Util.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Util.php:            $select->where($table.$column.$operator, $value);
./Common/Db/Abstract.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Abstract.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Abstract.php: * @version    $Id: Abstract.php 802 2010-01-28 16:06:41Z onerui $
./Common/Db/Abstract.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Abstract.php:            $rs = $this->_tdb->insert($data);
./Common/Db/Abstract.php:        $where = $this->_tdb->getAdapter()
./Common/Db/Abstract.php:            ->quoteInto($this->_tdb->primary.' = ?', $id);
./Common/Db/Abstract.php:            $rs = $this->_tdb->delete($where);
./Common/Db/Abstract.php:        if (!isset($data[$this->_tdb->primary])) {
./Common/Db/Abstract.php:            $where = $this->_tdb->getAdapter()
./Common/Db/Abstract.php:                ->quoteInto($this->_tdb->primary.' = ?', $data[$this->_tdb->primary]);
./Common/Db/Abstract.php:            throw new Exception($this->_tdb->primary.' can not be null');
./Common/Db/Abstract.php:            $rs = $this->_tdb->update($data, $where);
./Common/Db/Abstract.php:        $db = $this->_tdb->getAdapter();
./Common/Db/Abstract.php:        $select = $db->select();
./Common/Db/Abstract.php:        $select->from($this->_tdb->name, '*');
./Common/Db/Abstract.php:        $select->where($this->_tdb->primary.'= ?', $id);
./Common/Db/Abstract.php:            $rs = $db->fetchRow($select);
./Common/Db/Abstract.php:        $db = $this->_tdb->getAdapter();
./Common/Db/Abstract.php:        $select = $db->select();
./Common/Db/Abstract.php:        if (in_array('isdelete', $this->_tdb->_cols) && !isset($where['isdelete'])) {
./Common/Db/Abstract.php:        $select->from($this->_tdb->name, '*');
./Common/Db/Abstract.php:        $select->order($order);
./Common/Db/Abstract.php:        $select->limit($limit, $offset);
./Common/Db/Abstract.php:            $rs = $db->fetchAll($select);
./Common/Db/Abstract.php:        $db = $this->_tdb->getAdapter();
./Common/Db/Abstract.php:        $select = $db->select();
./Common/Db/Abstract.php:        if (in_array('isdelete', $this->_tdb->_cols) && !isset($where['isdelete'])) {
./Common/Db/Abstract.php:        $select->from($this->_tdb->name, 'count(*) as count');
./Common/Db/Abstract.php:        $select->order($order);
./Common/Db/Abstract.php:        $select->limit($limit, $offset);
./Common/Db/Abstract.php:            $rs = $db->fetchRow($select);
./Common/Db/Table.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table.php: * @version    $Id: Table.php 839 2010-03-28 10:27:39Z onerui $
./Common/Db/Table.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Table.php:     * You may declare a single-column primary key
./Common/Db/Table.php:     * @param  array  $data  Column-value pairs.
./Common/Db/Table.php:        $cols = $this->_getCols();
./Common/Db/Table.php:            $data['created'] = date('Y-m-d H:i:s');
./Common/Db/Table.php:            $data['updated'] = date('Y-m-d H:i:s');
./Common/Db/Table.php:     * @param  array        $data  Column-value pairs.
./Common/Db/Table.php:        $cols = $this->_getCols();
./Common/Db/Table.php:        if (isset($data[$this->_primary])) {
./Common/Db/Table.php:            unset($data[$this->_primary]);
./Common/Db/Table.php:            $data['updated'] = date('Y-m-d H:i:s');
./Common/Db/Table.php:            $rs = $this->find($id)->toArray();
./Common/Db/Table.php:        $db = $this->getAdapter();
./Common/Db/Table.php:        $select = $db->select();
./Common/Db/Table.php:        $cols = $this->_getCols();
./Common/Db/Table.php:        $select->from($this->_name, '*');
./Common/Db/Table.php:        $select->order($order);
./Common/Db/Table.php:        $select->limit($limit, $offset);
./Common/Db/Table.php:            $rs = $db->fetchAll($select);
./Common/Db/Table.php:        $db = $this->getAdapter();
./Common/Db/Table.php:        $select = $db->select();
./Common/Db/Table.php:        $cols = $this->_getCols();
./Common/Db/Table.php:        $select->from($this->_name, 'count(*) as count');
./Common/Db/Table.php:            $rs = $db->fetchRow($select);
./Common/Db/Doctrine.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Doctrine.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/Doctrine.php: * @version    $Id: Session.php 811 2010-02-28 12:08:39Z onerui $
./Common/Db/Doctrine.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/User.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/User.php: * @version    $Id: User.php 832 2010-03-21 15:51:48Z onerui $
./Common/Db/User.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Db/User.php:        $rs = $this->getList($where, array(), 1);
./Common/Util/Pager.php:	    $begin = $flag = (($page - (int)($quantity / 2)) < 1) ? 1 : ($page - (int)($quantity / 2));
./Common/Util/Pager.php:	    $end   = (($begin + $quantity) < $pages) ? ($begin + $quantity - 1) : $pages;
./Common/Util/Pager.php:	        $pager['previous'] = $page - 1;
./Common/Util/Pager.php:	    $pager['itemFrom'] = ($count == 0) ? 0 : ((($page - 1) * $limit) + 1);
./Common/Util/Uuid.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Uuid.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Uuid.php: * @version    $Id: Uuid.php 799 2010-01-24 15:33:43Z evorui $
./Common/Util/Uuid.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Uuid.php:     * such method, described in section 4.4, is based on truly random or pseudo-random
./Common/Util/Uuid.php:     * We choose to produce pseudo-random numbers with the Mersenne Twister, and to always
./Common/Util/Uuid.php:     * because, even on 32-bit systems, PHP's RAND_MAX will often be the maximum     *signed*
./Common/Util/Uuid.php:     * value, with only the equivalent of 31 significant bits. Producing two 16-bit random
./Common/Util/Uuid.php:     * numbers to make up a 32-bit one is less efficient, but guarantees that all 32 bits
./Common/Util/Uuid.php:        return sprintf('%04x%04x-%04x-%03x4-%04x-%04x%04x%04x',
./Common/Util/Uuid.php:     * ([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})
./Common/Util/Uuid.php:     * ex. 00000000-0000-0000-0000-000000000000
./Common/Util/Uuid.php:        if (eregi("^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$", $uuid)) {
./Common/Util/Format.php:        $textarr = preg_split('/(<.*>|\[.*\])/Us', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
./Common/Util/Format.php:        $allblocks = '(?:table|thead|tfoot|caption|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|select|form|map|area|blockquote|address|math|style|input|p|h[1-6]|hr)';
./Common/Util/Format.php:        $text = str_replace(array("<br />", "<br>", "\r\n", "\r"), "\n", $text);  // cross-platform newlines
./Common/Util/Format.php:        $texts = preg_split('/\n\s*\n/', $text, -1, PREG_SPLIT_NO_EMPTY);
./Common/Util/Format.php:            "/(<[^>]*)on[a-zA-Z] \s*=([^>]*>)/isU",
./Common/Util/Ip.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Ip.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Ip.php: * @version    $Id: Ip.php 799 2010-01-24 15:33:43Z evorui $
./Common/Util/Ip.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Util/Image.php:        $g_imgcomp = 100 - $comp;
./Common/Util/Image.php:            if (($g_is[0] - $g_fw) >= ($g_is[1] - $g_fh)) {
./Common/Util/Image.php:	    $dims = $this->_getResizeDimensions($orig_w, $orig_h, $max_w, $max_h, $crop);
./Common/Util/Image.php:		$dstimage = "{$dir}/{$name}-{$suffix}.jpg";
./Common/Util/Image.php:        	$src_x = intval(($src_w - $crop_w) / 2);
./Common/Util/Image.php:        	$src_y = intval(($src_h - $crop_h) / 2);	
./Common/Config.php:     * Get configuration by config-file-name, Ignore extension!
./Common/Controller/Action.php: *    http://www.apache.org/licenses/LICENSE-2.0
./Common/Controller/Action.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./Common/Controller/Action.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Controller/Action.php: * @version    $Id: Action.php 829 2010-03-18 14:50:56Z evorui $
./Common/Controller/Action.php: * @copyright  Copyright 2004-2010 HOOTO.COM
./Common/Controller/Action.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./Common/Controller/Action.php:        $this->_requset = $this->getRequest();
./Common/Controller/Action.php:        $this->_params = $this->getRequest()->getParams();
./Common/Controller/Action.php:        $this->_session = Common_Session::getInstance();
./Common/Controller/Action.php:        $this->_initView();
./Common/Controller/Action.php:        $this->view->session = $this->_session;
./Common/Controller/Action.php:        //print_r($this->view);
./Common/Controller/Action.php:        $this->view->setScriptPath(array());
./Common/Controller/Action.php:        $module = $this->getRequest()->getParam('module');
./Common/Controller/Action.php:        $basePath = $this->getRequest()->getBasePath();
./Common/Controller/Action.php:        $this->view->basePath = $basePath;
./Common/Controller/Action.php:        $this->view->baseModulePath = $basePath."/$module";
./Common/Controller/Action.php:        $this->view->addBasePath(APPLICATION_PATH.'/modules/default/views');
./Common/Controller/Action.php:        $this->view->viewDefaultPath = $basePath.'/_default';
./Common/Controller/Action.php:            $this->view->addBasePath(APPLICATION_PATH."/modules/$module/views");
./Common/Controller/Action.php:            $this->view->viewModulePath = $basePath."/_$module";
./cm/controllers/IndexController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/IndexController.php: * @version    $Id: IndexController.php 856 2010-05-07 16:05:39Z evorui $
./cm/controllers/IndexController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/IndexController.php:        $this->initdb();
./cm/controllers/IndexController.php:        if (!in_array($this->reqs->inst, $c['types'])) {
./cm/controllers/IndexController.php:            return $this->errorAction();
./cm/controllers/IndexController.php:        $this->view->inst = $this->reqs->inst;
./cm/controllers/IndexController.php:        if (!isset($c['pagelets'][$this->reqs->act])) {
./cm/controllers/IndexController.php:            return $this->errorAction();
./cm/controllers/IndexController.php:        $this->view->act = $this->reqs->act;
./cm/controllers/IndexController.php:        foreach ($c['pagelets'][$this->reqs->act]['views'] as $v) {
./cm/controllers/IndexController.php:                    if (isset($this->reqs->{$key})) {
./cm/controllers/IndexController.php:                        $where[$key] = $this->reqs->{$key};
./cm/controllers/IndexController.php:                    $rs = $db->getById($where['id']);
./cm/controllers/IndexController.php:                $p  = isset($this->reqs->p) ? intval($this->reqs->p) : 1;
./cm/controllers/IndexController.php:                $rs = $db->getList($where, $order, $limit, ($p - 1) * $limit);
./cm/controllers/IndexController.php:                    $count = $db->getCount($where);
./cm/controllers/IndexController.php:                $count = $db->getCount($where);
./cm/controllers/IndexController.php:            $this->view->{$v['laykey']} = $this->view->render($v['view'], $output);
./cm/controllers/IndexController.php:        $this->response($c['pagelets'][$this->reqs->act]['layout']);
./cm/controllers/IndexController.php:        $conf = require SYS_ROOT."/conf/cm.{$this->reqs->instance}.inc.php";
./cm/controllers/IndexController.php:        $conf = $conf[$this->reqs->method];
./cm/controllers/IndexController.php:            $rs = $db->getList();
./cm/controllers/IndexController.php:            $this->view->{$v['name']} = $this->view->render($v['view'], 
./cm/controllers/IndexController.php:        $this->response('list');
./cm/controllers/NodeController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/NodeController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/NodeController.php: * @version    $Id: NodeController.php 856 2010-05-07 16:05:39Z evorui $
./cm/controllers/NodeController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/NodeController.php:        $this->initdb();
./cm/controllers/NodeController.php:        $this->editAction();
./cm/controllers/NodeController.php:        $entry = $this->reqs->params;
./cm/controllers/NodeController.php:        $entry  = $dbentry->getById($id);
./cm/controllers/NodeController.php:        $cats   = $dbcat->getList(array('uid' => 1, 'vid' => 1), array(), 1000);
./cm/controllers/NodeController.php:        $params = array('reqs' => $this->reqs,
./cm/controllers/NodeController.php:        $this->view->content = $this->view->render('node/edit', $params);
./cm/controllers/NodeController.php:        $this->response('app/layout');
./cm/controllers/NodeController.php:            "/(<[^>]*)on[a-zA-Z] \s*=([^>]*>)/isU",
./cm/controllers/NodeController.php:        $entry = $this->reqs->params;
./cm/controllers/NodeController.php:        if (! $validator->isValid($entry, $message)) {
./cm/controllers/NodeController.php:            $this->view->message = Core_Message::get('error', $message);
./cm/controllers/NodeController.php:            return $this->editAction();
./cm/controllers/NodeController.php:                $dbentry->insert($entry);
./cm/controllers/NodeController.php:                $dbentry->update($entry, $where);
./cm/controllers/NodeController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./cm/controllers/NodeController.php:            return $this->editAction();
./cm/controllers/NodeController.php:        $this->reqs->params = $entry;
./cm/controllers/NodeController.php:        $this->view->message = Core_Message::get('success', 'Success');
./cm/controllers/NodeController.php:        $this->editAction();
./cm/controllers/NodeController.php:        if (!isset($this->reqs->params['id'])) {
./cm/controllers/NodeController.php:            $this->view->message = Core_Message::get('error', "ID can not be null", $links);
./cm/controllers/NodeController.php:            return $this->response("error/index");
./cm/controllers/NodeController.php:            $entry  = $dbentry->getById($this->reqs->params['id']);
./cm/controllers/NodeController.php:            $dbentry->delete(array('id' => $this->reqs->params['id']));
./cm/controllers/NodeController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./cm/controllers/NodeController.php:            return $this->response("error/index");
./cm/controllers/NodeController.php:        $this->view->message = Core_Message::get('success', 'Success');
./cm/controllers/NodeController.php:        $this->response("error/index");
./cm/controllers/NodeController.php:                throw new Exception('Can not connect to db-server');
./cm/controllers/NodeController.php:            $e->getMessage();
./cm/controllers/NodeController.php:        $db = $dbentry->getAdapter();
./cm/controllers/NodeController.php:        $rs = array();//$dbsrc->query("SELECT * from kit_node ORDER BY nodeid LIMIT 99999")->fetchAll();
./cm/controllers/NodeController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/NodeController.php:            $dbentry->insert($set);
./cm/controllers/NodeController.php:        $rs = array();//$dbsrc->query("SELECT * from kit_node_revision ORDER BY nodeid LIMIT 99999")->fetchAll();
./cm/controllers/NodeController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/NodeController.php:            $str = @mb_convert_encoding($val['body'], 'UTF-8', mb_detect_encoding($val['body'], "auto", TRUE));
./cm/controllers/NodeController.php:                $dbentry->update($set, array('id' => $val['nodeid']));
./cm/controllers/NodeController.php:        $rs = $dbsrc->query("SELECT * from kit_node_tree ORDER BY treeid LIMIT 99999")->fetchAll();
./cm/controllers/NodeController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/NodeController.php:            $str = @mb_convert_encoding($val['name'], 'UTF-8', mb_detect_encoding($val['name'], "auto", TRUE));
./cm/controllers/NodeController.php:                $dbtermuser->insert($set);
./cm/controllers/AppController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/AppController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/AppController.php: * @version    $Id: AppController.php 856 2010-05-07 16:05:39Z evorui $
./cm/controllers/AppController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/AppController.php:        $this->initdb();
./cm/controllers/AppController.php:        /*if (!in_array($this->reqs->inst, $cfg['types'])) {
./cm/controllers/AppController.php:            return $this->errorAction();
./cm/controllers/AppController.php:        $this->view->inst = $this->reqs->inst;
./cm/controllers/AppController.php:        if (!isset($cfg['pagelets'][$this->reqs->act])) {
./cm/controllers/AppController.php:            return $this->errorAction();
./cm/controllers/AppController.php:        $this->view->act = $this->reqs->act;
./cm/controllers/AppController.php:        $params = array('reqs' => $this->reqs);
./cm/controllers/AppController.php:        foreach ($cfg['pagelets'][$this->reqs->method]['views'] as $v) {
./cm/controllers/AppController.php:            $this->view->{$v['pagelet']} = $this->view->render($v['script'], $params);
./cm/controllers/AppController.php:        $this->response($cfg['pagelets'][$this->reqs->act]['layout']);
./cm/controllers/ErrorController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/ErrorController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/ErrorController.php: * @version    $Id: ErrorController.php 856 2010-05-07 16:05:39Z evorui $
./cm/controllers/ErrorController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/ErrorController.php:        $this->render();
./cm/controllers/UserController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/UserController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/UserController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/UserController.php:        $this->initdb();
./cm/controllers/UserController.php:        //$myhome  = $this->reqs->params('myhome');
./cm/controllers/UserController.php:        print_r($this->reqs);
./cm/controllers/UserController.php:        if (isset($this->reqs->vars['q'])) {
./cm/controllers/UserController.php:        $this->editAction();
./cm/controllers/UserController.php:        $entry = $this->reqs->params;
./cm/controllers/UserController.php:        $entry  = $dbentry->getById($id);
./cm/controllers/UserController.php:        $cats   = $dbcat->getList(array('uid' => 1, 'vid' => 1), array(), 1000);
./cm/controllers/UserController.php:        $params = array('reqs' => $this->reqs,
./cm/controllers/UserController.php:        $this->view->content = $this->view->render('node/edit', $params);
./cm/controllers/UserController.php:        $this->response('app/layout');
./cm/controllers/UserController.php:            "/(<[^>]*)on[a-zA-Z] \s*=([^>]*>)/isU",
./cm/controllers/UserController.php:        $entry = $this->reqs->params;
./cm/controllers/UserController.php:        if (! $validator->isValid($entry, $message)) {
./cm/controllers/UserController.php:            $this->view->message = Core_Message::get('error', $message);
./cm/controllers/UserController.php:            return $this->editAction();
./cm/controllers/UserController.php:                $dbentry->insert($entry);
./cm/controllers/UserController.php:                $dbentry->update($entry, $where);
./cm/controllers/UserController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./cm/controllers/UserController.php:            return $this->editAction();
./cm/controllers/UserController.php:        $this->reqs->params = $entry;
./cm/controllers/UserController.php:        $this->view->message = Core_Message::get('success', 'Success');
./cm/controllers/UserController.php:        $this->editAction();
./cm/controllers/UserController.php:        if (!isset($this->reqs->params['id'])) {
./cm/controllers/UserController.php:            $this->view->message = Core_Message::get('error', "ID can not be null", $links);
./cm/controllers/UserController.php:            return $this->response("error/index");
./cm/controllers/UserController.php:            $entry  = $dbentry->getById($this->reqs->params['id']);
./cm/controllers/UserController.php:            $dbentry->delete(array('id' => $this->reqs->params['id']));
./cm/controllers/UserController.php:            $this->view->message = Core_Message::get('error', $e->getMessage());
./cm/controllers/UserController.php:            return $this->response("error/index");
./cm/controllers/UserController.php:        $this->view->message = Core_Message::get('success', 'Success');
./cm/controllers/UserController.php:        $this->response("error/index");
./cm/controllers/UserController.php:                throw new Exception('Can not connect to db-server');
./cm/controllers/UserController.php:            $e->getMessage();
./cm/controllers/UserController.php:        $db = $dbentry->getAdapter();
./cm/controllers/UserController.php:        $rs = array();//$dbsrc->query("SELECT * from kit_node ORDER BY nodeid LIMIT 99999")->fetchAll();
./cm/controllers/UserController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/UserController.php:            $dbentry->insert($set);
./cm/controllers/UserController.php:        $rs = array();//$dbsrc->query("SELECT * from kit_node_revision ORDER BY nodeid LIMIT 99999")->fetchAll();
./cm/controllers/UserController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/UserController.php:            $str = @mb_convert_encoding($val['body'], 'UTF-8', mb_detect_encoding($val['body'], "auto", TRUE));
./cm/controllers/UserController.php:                $dbentry->update($set, array('id' => $val['nodeid']));
./cm/controllers/UserController.php:        $rs = $dbsrc->query("SELECT * from kit_node_tree ORDER BY treeid LIMIT 99999")->fetchAll();
./cm/controllers/UserController.php:        //$rs = $dbsrc->fetchAll();
./cm/controllers/UserController.php:            $str = @mb_convert_encoding($val['name'], 'UTF-8', mb_detect_encoding($val['name'], "auto", TRUE));
./cm/controllers/UserController.php:                $dbtermuser->insert($set);
./cm/controllers/TaxonomyController.php: *    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/TaxonomyController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/TaxonomyController.php: * @version    $Id: TaxonomyController.php 856 2010-05-07 16:05:39Z evorui $
./cm/controllers/TaxonomyController.php: * @license    http://www.apache.org/licenses/LICENSE-2.0
./cm/controllers/TaxonomyController.php:        $this->initdb();
./cm/controllers/TaxonomyController.php:        $this->view->feed = $db->getList(array(), array('updated DESC'), 999);
./cm/controllers/TaxonomyController.php:        $this->response('taxonomy/index');
./cm/controllers/TaxonomyController.php:        if (!in_array($this->reqs->inst, $c['types'])) {
./cm/controllers/TaxonomyController.php:            return $this->errorAction();
./cm/controllers/TaxonomyController.php:        $this->view->inst = $this->reqs->inst;
./cm/controllers/TaxonomyController.php:        if (!isset($c['pagelets'][$this->reqs->act])) {
./cm/controllers/TaxonomyController.php:            return $this->errorAction();
./cm/controllers/TaxonomyController.php:        $this->view->act = $this->reqs->act;
./cm/controllers/TaxonomyController.php:        foreach ($c['pagelets'][$this->reqs->act]['views'] as $v) {
./cm/controllers/TaxonomyController.php:                    if (isset($this->reqs->{$key})) {
./cm/controllers/TaxonomyController.php:                        $where[$key] = $this->reqs->{$key};
./cm/controllers/TaxonomyController.php:                    $rs = $db->getById($where['id']);
./cm/controllers/TaxonomyController.php:                $p  = isset($this->reqs->p) ? intval($this->reqs->p) : 1;
./cm/controllers/TaxonomyController.php:                $rs = $db->getList($where, $order, $limit, ($p - 1) * $limit);
./cm/controllers/TaxonomyController.php:                    $count = $db->getCount($where);
./cm/controllers/TaxonomyController.php:                $count = $db->getCount($where);
./cm/controllers/TaxonomyController.php:            $this->view->{$v['laykey']} = $this->view->render($v['view'], $output);
./cm/controllers/TaxonomyController.php:        $this->response($c['pagelets'][$this->reqs->act]['layout']);
./cm/controllers/TaxonomyController.php:        $conf = require SYS_ROOT."/conf/cm.{$this->reqs->instance}.inc.php";
./cm/controllers/TaxonomyController.php:        $conf = $conf[$this->reqs->method];
./cm/controllers/TaxonomyController.php:            $rs = $db->getList();
./cm/controllers/TaxonomyController.php:            $this->view->{$v['name']} = $this->view->render($v['view'], 
./cm/controllers/TaxonomyController.php:        $this->response('list');
./cm/views/app/side-search.php:  <form id="search-form" action="/<?php echo $reqs->inst?>/index/">
./cm/views/app/side-search.php:    <input name="q" type="text" value="<?php echo $reqs->q?>" style="width:100px;padding-left:20px;background:url(/_cm/img/magnifier.png) left no-repeat;" />
./cm/views/app/feed-type.php:$feed = $db->getList($where, $order, 99);
./cm/views/app/feed-type.php:    <li><a class="<?php if (!isset($reqs->type)) echo 'current'?>" href="/<?php echo $reqs->inst?>/<?php echo $reqs->method?>/">所有</a></li>
./cm/views/app/feed-type.php:    $class = (isset($reqs->type) && $reqs->type == $entry['id']) ? "current" : "";
./cm/views/app/feed-type.php:    <li><a class="<?php echo $class?>" href="/<?php echo $reqs->inst?>/<?php echo $reqs->method?>/?type=<?=$entry['id']?>"><?php echo $entry['title']?></a></li>
./cm/views/app/entry.php:$id = isset($reqs->id) ? $reqs->id : '';
./cm/views/app/entry.php:$entry = $db->getById($id);
./cm/views/app/entry.php:    $cat_entry = $db->getById($entry['cat']);
./cm/views/app/entry.php:$this->headtitle = $entry['title'];
./cm/views/app/entry.php:<div class="entry-view">
./cm/views/app/entry.php:    <div class="entry-header">
./cm/views/app/entry.php:        <h1 class="entry-title"><?=$entry['title']?></h1>
./cm/views/app/entry.php:   	    <div class="entry-info">
./cm/views/app/entry.php:            <img src="/_cm/img/folder.png" align="absmiddle" title="Category" /> <a href="/<?php echo $this->inst?>/term/<?php echo $cat_entry['id']?>"><?=$cat_entry['title']?></a>
./cm/views/app/entry.php:   	<div class="entry-content"><?=$entry['content']?></div>
./cm/views/app/layout.php:<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
./cm/views/app/layout.php:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
./cm/views/app/layout.php:    <title><?php echo $this->headtitle; ?></title>
./cm/views/app/layout.php:    <?php echo $this->headlink; ?>
./cm/views/app/layout.php:<div class="centerall" style="background: url(/_cm/img/navline-px.png) #e4f2fd bottom repeat-x;"> 
./cm/views/app/layout.php:<div class="wrapper" style="padding-top:30px;">
./cm/views/app/layout.php:  <?php if ($this->types !== NULL) { ?>
./cm/views/app/layout.php:    print $this->search;
./cm/views/app/layout.php:    print $this->types;
./cm/views/app/layout.php:    <?php print $this->content; ?>
./cm/views/app/layout.php:    print $this->content; 
./cm/views/app/layout.php:    <div class="sidel">HOOTO CMF 6.x-dev</div>
./cm/views/app/feed.php:$acturl = "/{$this->inst}/{$this->act}/?";
./cm/views/app/feed.php:$p  = isset($reqs->p) ? intval($reqs->p) : 1;
./cm/views/app/feed.php:$type = isset($reqs->type) ? $reqs->type : NULL;
./cm/views/app/feed.php:if (isset($reqs->params['cat'])) {
./cm/views/app/feed.php:    $where['cat'] = intval($reqs->params['cat']);
./cm/views/app/feed.php:    $pagerurl .= "&cat={$reqs->params['cat']}";
./cm/views/app/feed.php:if (isset($reqs->params['term'])) {
./cm/views/app/feed.php:    $where['like.terms'] = "%{$reqs->params['term']}%";
./cm/views/app/feed.php:    $pagerurl .= "&term={$reqs->params['term']}";
./cm/views/app/feed.php:if (isset($reqs->q)) {
./cm/views/app/feed.php:    $where['like.title'] = "%{$reqs->q}%";
./cm/views/app/feed.php:    $pagerurl .= "&q={$reqs->q}";
./cm/views/app/feed.php:$feed = $db->getList($where, $order, $limit, ($p - 1) * $limit);
./cm/views/app/feed.php:$count = $db->getCount($where);
./cm/views/app/feed.php:    $feed[$key]['link'] = "/{$this->inst}/view/?id={$entry['id']}"; // TODO
./cm/views/app/feed.php:    $feed[$key]['avatar'] = "/user/profile/avatar/{$entry['uname']}-w40.png";
./cm/views/app/feed.php:        $feed[$key]['_cat_entry'] = $dbterm->getById($entry['cat']);
./cm/views/app/feed.php:      <img src="<?=$entry['avatar']?>" title="<?=$entry['uname']?>" width="18px" height="18px"/> <a href="<?php echo $entry['link_profile']?>"><b><?=$entry['uname']?></b></a> on <?php echo date('Y-m-d', strtotime($entry['created']));?>
./cm/views/app/feed.php:    <li><?php echo 'Items'.' '.$pager['itemFrom'].' - '.$pager['itemTo'].' of '.$pager['itemCount']; ?></li>    
./cm/views/message-general.php:if (isset($this->message)) 
./cm/views/message-general.php:    switch ($this->message['type']) {
./cm/views/message-general.php:    background-color: <?php echo $msg_bg; ?>; 
./cm/views/message-general.php:.msgitembody {font-weight: bold;}
./cm/views/message-general.php:      	    <img src="/_default/img/<?=$this->message['type']?>-small.png" border="0" />
./cm/views/message-general.php:      	    <?=$this->message['body']?>
./cm/views/taxonomy/index.php:foreach ($this->feed as $entry) {
./cm/views/error/index.php:<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
./cm/views/error/index.php:  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
./cm/views/error/index.php:      	    <img src="/_cm/img/<?=$this->message['type']?>-large.png" border="0" />
./cm/views/error/index.php:      	    <div class="msgbody"><?=$this->message['body']?></div>
./cm/views/error/index.php:      	        <?php foreach ($this->message['links'] as $link): ?> 
./cm/views/error/message.php:<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
./cm/views/error/message.php:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
./cm/views/error/message.php:    <title><?php echo $this->headtitle; ?></title>
./cm/views/error/message.php:    <?php echo $this->headlink; ?>
./cm/views/error/message.php:body {padding:100px; background-color:#e4f2fd;}
./cm/views/error/message.php:#msg_container {text-align:left; background-color:#ffffff; border:#c6d9e9 3px solid;}
./cm/views/error/message.php:#msg_container .msg_body {padding-top:10px; font-size:14pt; font-weight:bold; border-bottom:#c6d9e9 1px solid;}
./cm/views/error/message.php:#msg_container ul li {list-style-type:none;}
./cm/views/error/message.php:#msg_container a {text-decoration:underline;}
./cm/views/error/message.php:      	    <img src="/_cm/img/<?=$this->message['type']?>-large.png" border="0" />
./cm/views/error/message.php:      	    <div class="msg_body"><?=$this->message['body']?></div>
./cm/views/error/message.php:      	        <?php foreach ($this->message['links'] as $link): ?> 
./cm/views/layout.php:<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
./cm/views/layout.php:    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
./cm/views/layout.php:    <title><?php echo $this->headtitle; ?></title>
./cm/views/layout.php:    <?php echo $this->headlink; ?>
./cm/views/layout.php:<div class="centerall" style="background: url(/_cm/img/navline-px.png) #e4f2fd bottom repeat-x;"> 
./cm/views/layout.php:        <?php if ($this->types !== NULL) { ?>
./cm/views/layout.php:        <?php print $this->types; ?>
./cm/views/layout.php:        <?php print $this->content; ?>
./cm/views/node/edit.php:$this->headlink = "<link rel=\"stylesheet\" href=\"/_cm/css/node.css\" type=\"text/css\" media=\"all\" />";
./cm/views/node/edit.php:<!-- TinyMCE/ -->
./cm/views/node/edit.php:<!-- /TinyMCE -->
./cm/views/node/edit.php:<?php print $this->render('message-general'); ?>
./cm/views/node/edit.php:        <!-- node title -->
./cm/views/node/edit.php:        <!-- node summary -->
./cm/views/node/edit.php:                    <span id="summary_media_box" class="hideifnojs"><a href="javascript:;"  onclick="current_media_plugin = 'summary'; openWindow('/media/manage-editorplugin/?target=summary', 'upload', '800', '700')">[Insert Images]</a></span>
./cm/views/node/edit.php:        <!-- node content -->
./cm/views/node/edit.php:            <span id="content_media_box" class="hideifnojs"><a href="javascript:;"  onclick="current_media_plugin = 'content'; openWindow('/media/manage-editorplugin/?target=content', 'upload', '800', '700')">[Insert Images]</a></span>
./cm/views/node/edit.php:    var l = (screen.availWidth - width) / 2;
./cm/views/node/edit.php:    var t = (screen.availHeight - height) / 2;      
./cm/models/TermUser.php:        $this->_uid = $uid;
